---
title: "Code snippets"
author: "Marcos"
format:
    revealjs:
        slide-number: true

---


## Dash Code Slide

```{.python code-line-numbers="1-3|5-14|16-24|26-30"}
from dash import Dash, html, dcc, callback, Output, Input
import dash_bootstrap_components as dbc
import segno

app = Dash(__name__, external_stylesheets=[dbc.themes.YETI])

app.layout = html.Div([
    html.H1(children='QR Code App', style={'textAlign': 'center'}),
    dbc.Input(id='content',
              value='',
              debounce=True,
              placeholder="Enter text for QR Code",
              style={"width": "60%"}),
    html.Div(html.Img(id='output-image', width=600))
])

@callback(Output('output-image', 'src'), Input('content', 'value'))
def update_code(content):
    if not content:
        return ''

    _qrcode = segno.make(content, micro=False)

    return _qrcode.svg_data_uri()

if __name__ == '__main__':
    app.run(debug=True)

```


## Dash Input Group

```{.python code-line-numbers="3-15|27-32"}
app.layout = html.Div([
    html.H1(children='QR Code App', style={'textAlign': 'center'}),
    dbc.InputGroup([
        dbc.Input(
            id='content',
            value='',
            debounce=True,
            placeholder="Enter text for QR Code",
        ),
        dbc.Button(id='go', children="Make QR Code!"),
    ],
                   style={
                       "width": "60%",
                       "margin": "auto"
                   }),
    html.Div(
        html.Img(
            id='output-image',
            width=600,
            style={
                'margin': 'auto',
                'display': 'block'
            },
        ), )
])

@callback(
    Output('output-image', 'src'),
    State('content', 'value'),
    Input('go', 'n_clicks'),
)
def update_code(content, _):
    if not content:
        return ''

    _qrcode = segno.make(content, micro=False)

    return _qrcode.svg_data_uri()

```

## Shiny Code
```{.python code-line-numbers="1-2|4-12|14-27"}

from shiny import App, render, ui, reactive
import segno

app_ui = ui.page_bootstrap(
    ui.h2("Shiny QR Code Generator"),
    ui.layout_sidebar(
        ui.panel_sidebar(
            ui.input_text(id="text", label="Content"),
            ui.input_action_button(id="go", label="Generate!"),
        ), ui.panel_main(ui.output_ui("qrcode"), )))


def server(input, output, session):

    @output
    @render.ui
    def qrcode():
        input.go()
        with reactive.isolate():
            if not input.text():
                return ui.tags.p("Enter Content to generate QR Code.")
            _qrcode = segno.make(input.text())
            return ui.tags.img({
                'src': _qrcode.svg_data_uri(),
                'width': "600px"
            })


app = App(app_ui, server)


```